 ------
 Customizing code generation
 ------
 Christian Schulte
 ------
 22 March 2010
 ------

 ~~ Copyright (C) Christian Schulte, 2005-206
 ~~ All rights reserved.
 ~~
 ~~ Redistribution and use in source and binary forms, with or without
 ~~ modification, are permitted provided that the following conditions
 ~~ are met:
 ~~
 ~~   o Redistributions of source code must retain the above copyright
 ~~        notice, this list of conditions and the following disclaimer.
 ~~
 ~~   o Redistributions in binary form must reproduce the above copyright
 ~~     notice, this list of conditions and the following disclaimer in
 ~~     the documentation and/or other materials provided with the
 ~~     distribution.
 ~~
 ~~ THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 ~~ INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 ~~ AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 ~~ THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY DIRECT, INDIRECT,
 ~~ INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 ~~ NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 ~~ DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 ~~ THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 ~~ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 ~~ THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ~~
 ~~ $JOMC$

Customizing code generation

  If you need to customize the generated code, simply provide custom templates to the JOMC Plugin. This
  is done by adding a template artifact as a plugin dependency and setting the <<<templateProfile>>> parameter of the
  JOMC Plugin. As a starting point you can copy the default templates from the {{{${project.url}/../jomc-tools}JOMC Tools}}
  artifact from directory
  {{{${project.scm.url}/../jomc-tools/src/main/templates/org/jomc/tools/templates}org/jomc/tools/templates/jomc-java}}
  to a <<<org/jomc/tools/templates/sub-directory>>> of your template artifact.

  For example, copying the default templates to directory <<<org/jomc/tools/templates/custom-profile>>>, you need to set
  the <<<templateProfile>>> parameter to <<<custom-profile>>> and add your template artifact as a plugin dependency for
  the templates to be found.

  See class {{{${project.url}/../jomc-tools/apidocs/org/jomc/tools/SourceFileProcessor.html}SourceFileProcessor}} for
  details, especially the {{{${project.url}/../jomc-tools/apidocs/org/jomc/tools/JomcTool.html#getVelocityTemplate(java.lang.String)}getVelocityTemplate}}
  method and the {{{${project.url}/../jomc-tools/apidocs/org/jomc/tools/SourceFileProcessor.html#getSourceFilesType(org.jomc.model.Specification)}getSourceFilesType}}
  methods.

+-----------------+
<project>
  ...
  <build>
    <plugins>
      ...
      <plugin>
        <groupId>${project.groupId}</groupId>
        <artifactId>${project.artifactId}</artifactId>
        <version>${project.version}</version>
        ...
        <dependencies>
          <dependency>
            <groupId>your.group.id</groupId>
            <artifactId>your-custom-templates</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
        ...
        <configuration>
          <templateProfile>custom-profile</templateProfile>
        </configuration>
        ...
      </plugin>
      ...
    </plugins>
  </build>
  ...
</project>
+-----------------+

* Controlling behaviour of the default templates

  As of JOMC 1.2, the behaviour of the default templates can be controlled using the <<<templateParameters>>> parameter.
  The default values are shown below.

+-----------------+
<project>
  ...
  <build>
    <plugins>
      ...
      <plugin>
        <groupId>${project.groupId}</groupId>
        <artifactId>${project.artifactId}</artifactId>
        <version>${project.version}</version>
        ...
        <configuration>
          <templateParameters>

            <!-- Flag indicating generated code to contain checks for illegal null references using the 'assert' keyword. -->
            <templateParameter>
              <key>with-assertions</key>
              <value>true</value>
              <type>java.lang.Boolean</type>
            </templateParameter>

            <!-- Flag indicating generated code to contain copyright notices based on model object authors. -->
            <templateParameter>
              <key>with-author-copyright</key>
              <value>true</value>
              <type>java.lang.Boolean</type>
            </templateParameter>

            <!-- Flag indicating generated code to contain editor folds for the Netbeans IDE and compatible editors. -->
            <templateParameter>
              <key>with-editor-fold</key>
              <value>true</value>
              <type>java.lang.Boolean</type>
            </templateParameter>

            <!-- Flag indicating generated code to contain javadoc documentation. -->
            <templateParameter>
              <key>with-javadoc</key>
              <value>true</value>
              <type>java.lang.Boolean</type>
            </templateParameter>

            <!-- Flag indicating generated code to contain '@author' javadoc documentation tags. -->
            <templateParameter>
              <key>with-javadoc-author</key>
              <value>true</value>
              <type>java.lang.Boolean</type>
            </templateParameter>

            <!-- Flag indicating generated code to contain '@version' javadoc documentation tags. -->
            <templateParameter>
              <key>with-javadoc-version</key>
              <value>true</value>
              <type>java.lang.Boolean</type>
            </templateParameter>

            <!-- Flag indicating generated code to contain JSR-250 '@Generated' annotations. -->
            <templateParameter>
              <key>with-jsr-250</key>
              <value>true</value>
              <type>java.lang.Boolean</type>
            </templateParameter>

            <!-- Name of the project. -->
            <templateParameter>
              <key>with-project-name</key>
            </templateParameter>

            <!-- SCM file identification keyword. The given value will be surrounded by '$' characters. -->
            <templateParameter>
              <key>with-revision-keyword</key>
              <value>Id</value>
            </templateParameter>

            <!-- Flag indicating generated code to contain '@SuppressWarnings' annotations with the given value. -->
            <templateParameter>
              <key>with-suppress-warnings</key>
              <value>unused</value>
            </templateParameter>

            <!-- Flag indicating generated code to contain copyright notices based on model object vendor information. -->
            <templateParameter>
              <key>with-vendor-copyright</key>
              <value>true</value>
              <type>java.lang.Boolean</type>
            </templateParameter>

          </templateParameters>
        </configuration>
      </plugin>
      ...
    </plugins>
  </build>
  ...
</project>
+-----------------+
