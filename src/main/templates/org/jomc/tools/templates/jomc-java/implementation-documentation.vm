##
##   Copyright (C) Christian Schulte, 2005-206
##   All rights reserved.
##
##   Redistribution and use in source and binary forms, with or without
##   modification, are permitted provided that the following conditions
##   are met:
##
##     o Redistributions of source code must retain the above copyright
##       notice, this list of conditions and the following disclaimer.
##
##     o Redistributions in binary form must reproduce the above copyright
##       notice, this list of conditions and the following disclaimer in
##       the documentation and/or other materials provided with the
##       distribution.
##
##   THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
##   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
##   AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
##   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY DIRECT, INDIRECT,
##   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
##   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
##   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
##   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
##   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
##   THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
##
##   $JOMC$
##
## @param tool The tool merging the template.
## @param toolName The name of the tool merging the template.
## @param toolVersion The version of the tool merging the template.
## @param toolUrl The URL to the site of the tool merging the template.
## @param calendar A java.util.Calendar instance.
## @param now The current timestamp formatted using the pattern "yyyy-MM-dd'T'HH:mm:ss.SSSZ".
## @param year The current year formatted using the pattern "yyyy".
## @param month The current month formatted using the pattern "MM".
## @param day The current day formatted using the pattern "dd".
## @param hour The current hour formatted using the pattern "HH".
## @param minute The current minute formatted using the pattern "mm".
## @param second The current second formatted using the pattern "ss".
## @param timezone The current timezone formatted using the pattern "Z".
## @param model The model declaring the modules of the implementation to render.
## @param modules The modules declaring the implementation to render.
## @param implementation The implementation to render.
${tool.getIndentation(0)}// <editor-fold defaultstate="collapsed" desc=" Generated Documentation ">
${tool.getIndentation(0)}/**
#if($implementation.getDocumentation())
${tool.getIndentation(0)} * $tool.getJavadocComment($implementation.getDocumentation(), 0, " * ")
#end
${tool.getIndentation(0)} *
${tool.getIndentation(0)} * <p>
${tool.getIndentation(0)} *   This implementation is identified by identifier {@code <$implementation.getIdentifier()>}.
#set($specifications = $modules.getSpecifications($implementation.getIdentifier()))
#if($implementation.isAbstract())
${tool.getIndentation(0)} *   It does not provide any specified objects due to flag {@code <abstract>}.
#elseif($specifications && !$specifications.getReference().isEmpty())
${tool.getIndentation(0)} *   It provides objects named {@code <$implementation.getName()>} of the following specifications:
${tool.getIndentation(0)} *
${tool.getIndentation(0)} *   <ul>
#foreach($reference in $specifications.getReference())
#set($specification = $specifications.getSpecification($reference.getIdentifier()))
${tool.getIndentation(0)} *     <li>{@code <$reference.getIdentifier()>}#if($reference.getVersion()) at specification level $tool.getHtmlString($reference.getVersion())#else at any specification level#end#if($specification && $specification.getScope()) applying to {@code <$specification.getScope()>} scope#end.</li>
#end
${tool.getIndentation(0)} *   </ul>
${tool.getIndentation(0)} *
#if($implementation.isStateless())
${tool.getIndentation(0)} *   No state is retained across operations due to flag {@code <stateless>}.
#end
#else
${tool.getIndentation(0)} *   It does not provide any specified objects.
#end
#if($implementation.isFinal())
${tool.getIndentation(0)} *   This implementation is flagged the {@code <final>} node in an inheritance hierarchy.
#end
${tool.getIndentation(0)} * </p>
${tool.getIndentation(0)} *
#if($implementation.getAuthors())
#foreach($author in $implementation.getAuthors().getAuthor())
${tool.getIndentation(0)} * @author #if($author.getMail())<a href="mailto:$author.getMail()">#end$tool.getHtmlString($author.getName())#if($author.getMail())</a>#end#if($author.getVersion()) $tool.getHtmlString($author.getVersion())#end

#end
#end
#if($implementation.getVersion())
${tool.getIndentation(0)} * @version $tool.getHtmlString($implementation.getVersion())
#else
${tool.getIndentation(0)} * @version This implementation does not support versioning.
#end
${tool.getIndentation(0)} */
${tool.getIndentation(0)}// </editor-fold>
