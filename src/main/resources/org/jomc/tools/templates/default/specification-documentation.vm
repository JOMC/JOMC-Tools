##
##   Copyright (c) 2009 The JOMC Project
##   Copyright (c) 2005 Christian Schulte <cs@jomc.org>
##   All rights reserved.
##
##   Redistribution and use in source and binary forms, with or without
##   modification, are permitted provided that the following conditions
##   are met:
##
##     o Redistributions of source code must retain the above copyright
##       notice, this list of conditions and the following disclaimer.
##
##     o Redistributions in binary form must reproduce the above copyright
##       notice, this list of conditions and the following disclaimer in
##       the documentation and/or other materials provided with the
##       distribution.
##
##   THIS SOFTWARE IS PROVIDED BY THE JOMC PROJECT AND CONTRIBUTORS "AS IS"
##   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
##   THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
##   PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE JOMC PROJECT OR
##   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
##   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
##   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
##   OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
##   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
##   OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
##   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
##
##   $Id$
##
## @param modules The modules declaring specification.
## @param specification The specification of the template.
## @param tool The builder of the template.
// <editor-fold defaultstate="collapsed" desc=" Generated Documentation ">
/**
#if($specification.getDocumentation())
 * $tool.getJavadocComment($specification.getDocumentation().getText("en"), " * ")
#end
 * <p>This specification declares a multiplicity of {@code $specification.getMultiplicity().value()}.
#if($specification.getMultiplicity().value() == "One")
 * An application assembler is required to provide no more than one implementation of this specification (including none).
 * Use of class {@link org.jomc.ObjectManager ObjectManager} is supported for getting that implementation.<pre>
 * ${tool.getJavaTypeName($specification,false)} object = (${tool.getJavaTypeName($specification,false)}) ObjectManagerFactory.getObjectManager( getClass().getClassLoader() ).getObject( ${tool.getJavaTypeName($specification,false)}.class );
 * </pre>
#end
#if($specification.getMultiplicity().value() == "Many")
 * An application assembler may provide multiple implementations of this specification (including none).
 * Use of class {@link org.jomc.ObjectManager ObjectManager} is supported for getting these implementations or for
 * selecting a single implementation.<pre>
 * ${tool.getJavaTypeName($specification,false)}[] objects = (${tool.getJavaTypeName($specification,false)}[]) ObjectManagerFactory.getObjectManager( getClass().getClassLoader() ).getObject( ${tool.getJavaTypeName($specification,false)}.class );
 * ${tool.getJavaTypeName($specification,false)} object = ObjectManagerFactory.getObjectManager( getClass().getClassLoader() ).getObject( ${tool.getJavaTypeName($specification,false)}.class, "<i>implementation name</i>" );
 * </pre>
#end
 * </p>
 *
#if($specification.getScope())
 * <p>This specification applies to {@code $specification.getScope()} scope. The same $specification.getScope().toLowerCase() object is returned whenever requested.</p>
#else
 * <p>This specification does not apply to any scope. A new object is returned whenever requested.</p>
#end
 *
#if($specification.getAuthors())
#foreach($author in $specification.getAuthors().getAuthor())
 * @author #if($author.getMail())<a href="mailto:$author.getMail()">#end$author.getName()#if($author.getMail())</a>#end $author.getVersion()
#end
#end
#set($D = "$")
 * @version ${D}Id${D}
 */
// </editor-fold>
