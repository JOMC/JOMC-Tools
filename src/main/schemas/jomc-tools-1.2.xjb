<?xml version="1.0" encoding="UTF-8"?>
<!--

  Copyright (c) 2009 The JOMC Project
  Copyright (c) 2005 Christian Schulte <schulte2005@users.sourceforge.net>
  All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions
  are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the
      distribution.

  THIS SOFTWARE IS PROVIDED BY THE JOMC PROJECT AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE JOMC PROJECT OR
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

  $Id$

-->
<jaxb:bindings xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
               xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
               xmlns:xs="http://www.w3.org/2001/XMLSchema"
               xmlns:tools="http://jomc.org/tools/model"
               xmlns:ci="http://jaxb.dev.java.net/plugin/code-injector"
               version="2.0">

  <jaxb:bindings schemaLocation="jomc-tools-1.2.xsd">
    <!-- *********************************************************************************************************** -->
    <jaxb:bindings node="xs:complexType[@name='SourceFilesType']">
      <ci:code><![CDATA[
    /**
     * Gets a source file model for a given name from the list.
     *
     * @param identifier The identifier of the source file model to return.
     *
     * @return The source file model matching {@code identifier} from the list or {@code null} if no such source file
     * model is found.
     *
     * @throws NullPointerException if {@code identifier} is {@code null}.
     */
    public SourceFileType getSourceFile( final String identifier )
    {
        if ( identifier == null )
        {
            throw new NullPointerException( "identifier" );
        }

        for ( SourceFileType s : this.getSourceFile() )
        {
            if ( identifier.equals( s.getIdentifier() ) )
            {
                return s;
            }
        }

        return null;
    }]]>
      </ci:code>
    </jaxb:bindings>
    <!-- *********************************************************************************************************** -->
    <jaxb:bindings node="xs:complexType[@name='SourceSectionsType']">
      <ci:code><![CDATA[
    /**
     * Gets a section for a given name recursively.
     *
     * @param name The name of the section to return.
     *
     * @return The section with name {@code name} from the list or {@code null} if no such section is found.
     *
     * @throws NullPointerException if {@code name} is {@code null}.
     */
    public SourceSectionType getSourceSection( final String name )
    {
        if ( name == null )
        {
            throw new NullPointerException( "name" );
        }

        return this.getSourceSection( this, name );
    }

    private SourceSectionType getSourceSection( final SourceSectionsType sourceSectionsType, final String name )
    {
        if ( sourceSectionsType != null )
        {
            for ( SourceSectionType s : sourceSectionsType.getSourceSection() )
            {
                if ( name.equals( s.getName() ) )
                {
                    return s;
                }

                final SourceSectionType sourceSectionType = this.getSourceSection( s.getSourceSections(), name );
                if ( sourceSectionType != null )
                {
                    return sourceSectionType;
                }
            }
        }

        return null;
    }]]>
      </ci:code>
    </jaxb:bindings>
  </jaxb:bindings>
</jaxb:bindings>
