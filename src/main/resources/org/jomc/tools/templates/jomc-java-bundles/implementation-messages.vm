##
##   Copyright (c) 2009 The JOMC Project
##   Copyright (c) 2005 Christian Schulte <schulte2005@users.sourceforge.net>
##   All rights reserved.
##
##   Redistribution and use in source and binary forms, with or without
##   modification, are permitted provided that the following conditions
##   are met:
##
##     o Redistributions of source code must retain the above copyright
##       notice, this list of conditions and the following disclaimer.
##
##     o Redistributions in binary form must reproduce the above copyright
##       notice, this list of conditions and the following disclaimer in
##       the documentation and/or other materials provided with the
##       distribution.
##
##   THIS SOFTWARE IS PROVIDED BY THE JOMC PROJECT AND CONTRIBUTORS "AS IS"
##   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
##   THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
##   PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE JOMC PROJECT OR
##   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
##   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
##   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
##   OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
##   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
##   OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
##   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
##
##   $Id$
##
## @param modules The modules declaring implementation.
## @param implementation The implementation of the template.
## @param tool The builder of the template.
#set($messages = $modules.getMessages($implementation.getIdentifier()))
#if($messages)
    // <editor-fold defaultstate="collapsed" desc=" Generated Messages ">
#foreach($message in $messages.getMessage())

    /**
     * Gets the text of the {@code $message.getName()} message.
     * <p><b>Templates</b><br/><table>
#foreach($text in $message.getTemplate().getText())
     * <tr><td valign="top">$tool.getDisplayLanguage($text.getLanguage()):</td><td valign="top"><pre>$tool.getJavadocComment($message.getTemplate().getText($text.getLanguage()), "     * ")</pre></td></tr>
#end
     * </table></p>
     * @param locale The locale of the message to return.
#if($message.getArguments() && !$message.getArguments().getArgument().isEmpty())
#set($i = 0)
#foreach($argument in $message.getArguments().getArgument())
#set($argument = $message.getArguments().getArgument($i))
#set($i = $i + 1)
     * @param $argument.getName() #if($argument.getDocumentation())$tool.getJavadocComment($argument.getDocumentation().getText("en"), "     * ")#end#if(!$argument.getDocumentation())Format argument.#end

#end
#end
#if($message.getDocumentation())
     * @return $tool.getJavadocComment($message.getDocumentation().getText("en"), "     * ")
#end
#if(!$message.getDocumentation())
     * @return The text of the {@code $message.getName()} message.
#end
     *
     * @throws org.jomc.ObjectManagementException if getting the message instance fails.
     */
#if($message.isDeprecated())
    @Deprecated
#end
    @javax.annotation.Generated( value = "$tool.getClass().getName()",
                                 comments = "See ${project.url}" )
    $tool.getJavaModifierName($implementation,$message) static String $tool.getJavaGetterMethodName($message)( final java.util.Locale locale#if($message.getArguments() && !$message.getArguments().getArgument().isEmpty())#set($i = 0)#foreach($argument in $message.getArguments().getArgument())#set($argument = $message.getArguments().getArgument($i))#set($i = $i + 1), final $tool.getJavaTypeName($argument) $argument.getName()#end#end )
    {
        return java.text.MessageFormat.format( java.util.ResourceBundle.getBundle( "${tool.getJavaClasspathLocation($implementation)}", locale ).getString( "$message.getName()" )#if($message.getArguments() && !$message.getArguments().getArgument().isEmpty())#set($i = 0)#foreach($argument in $message.getArguments().getArgument())#set($argument = $message.getArguments().getArgument($i))#set($i = $i + 1), $argument.getName()#end#end, (Object) null );
    }
#end
    // </editor-fold>
#end